/* partio4Maya  3/12/2012, John Cassella  http://luma-pictures.com and  http://redpawfx.com
PARTIO Export
Copyright 2012 (c)  All rights reserved

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

* Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in
the documentation and/or other materials provided with the
distribution.

Disclaimer: THIS SOFTWARE IS PROVIDED BY  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE, NONINFRINGEMENT AND TITLE ARE DISCLAIMED.
IN NO EVENT SHALL  THE COPYRIGHT HOLDER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND BASED ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
*/

global proc AEpartioEmitterTemplate( string $nodeName )
{
	editorTemplate -callCustom pioEmLogoHeader pioEmLogoHeader $nodeName;
	editorTemplate -beginLayout "Global" -collapse 0;
	editorTemplate -addControl "cacheActive";
	// editorTemplate -addControl "flipYZ";  // not ready for prime time yet
	editorTemplate -callCustom pioEmAEoutpathNew pioEmAEoutpathReplace cacheDir;
	editorTemplate -addControl "cachePrefix";
	editorTemplate -addControl "cacheOffset";
	editorTemplate -addControl "cachePadding";
	editorTemplate -addControl "cacheFormat";
	editorTemplate -addControl "iconSize";


	editorTemplate -endLayout;

	editorTemplate -beginScrollLayout;

		editorTemplate -beginLayout "General Parameters" -collapse 0;
		    editorTemplate -addControl "useEmitterTransform";
		    editorTemplate -addControl -l "Jitter Position Magnitude" "jitterPos" ;
		    editorTemplate -addControl -l "Jitter Position Frequency" "jitterFreq";
		editorTemplate -endLayout;
		editorTemplate -beginLayout "Channels to import" -collapse 0;
		editorTemplate -callCustom "pioEmCustomAttrsManage" "pioEmCustomAttrsManage" $nodeName;
		editorTemplate -endLayout;

	// include/call base class/node attributes
	AEdependNodeTemplate $nodeName;

	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}

global proc int pioEmAEassignCacheFileCB( 	string $fileAttribute,
											string $fileName,
											string $fileType )
{
	string $components[];
  	tokenize $fileAttribute "." $components;
  	string $nodeName = $components[0];

  	string $fileNameComp[];

	string $baseFileName = basename($fileName,"");

	string $fileParts[] = `partioGetBaseFileName($baseFileName)`;
	string $fileBaseName = $fileParts[0];
	int $pad = $fileParts[4];
	string $ext = $fileParts[3];

	setAttr ($nodeName + ".cachePrefix") -type "string" $fileBaseName;

	int $extIndex = 0;

	switch ($ext)
	{
		case "bgeo":
			$extIndex = 0;
			break;
		case "geo":
			$extIndex = 1;
			break;
		case "pda":
			$extIndex = 2;
			break;
		case "pdb":
			$extIndex = 3;
			break;
		case "pdc":
			$extIndex = 4;
			break;
		case "mc":
			$extIndex = 5;
			break;
		case "bin":
			$extIndex = 6;
			break;
		case "prt":
			$extIndex = 7;
			break;
		case "ptc":
			$extIndex = 8;
			break;
		case "rib":
			$extIndex = 9;
			break;
		case "ass":
			$extIndex = 10;
			break;
		default:
			$extIndex = 4;
			break;

	}

	if ($ext == "pdc")
	{
		$pad = 0;
	}
	else if ($ext == "mc")
	{
		$pad = 0;
	}
	else if ($ext == "pts" || $ext == "xyz")
	{
		setAttr ($nodeName + ".staticCache") 1;
		$pad = 0;
	}

	setAttr ($nodeName + ".cachePadding") $pad;
	setAttr ($nodeName + ".cacheFormat") $extIndex;
	setAttr ($nodeName + ".cachePreDelim") -type "string" $fileParts[1];
	setAttr ($nodeName + ".cachePostDelim") -type "string" $fileParts[2];

	$fileName = substituteAllString($fileName, basename($fileName, ""), "");
  	setAttr $fileAttribute -type "string" $fileName;

	// This will force an update to display the effects
	// of the new cachefile.
	//
	currentTime `currentTime -q`;

  string $currentDir = `workspace -q -dir`;
  retainWorkingDirectory ($currentDir);

  return true;
}

global proc pioEmAEcacheFileBrowser( string $cmd, string $cacheName )
{
    string  $workspace = `workspace -q -fn`;
    setWorkingDirectory $workspace "diskCache" "data";

    fileBrowser ($cmd, "Partio Cache Directory", "", 0);
}

global proc pioEmAEoutpathNew(string $cacheName)
{
	setUITemplate -pst attributeEditorTemplate;
		columnLayout -adj true;
			rowLayout -nc 3 outpathLayout;
        		text -label "Output Path" outpathText;
		        textField diskNameField;
		            symbolButton -image "navButtonBrowse.png" browser;
				setParent ..;

		setParent ..;

	setUITemplate -ppt;
	setParent ..;

	pioEmAEoutpathReplace( $cacheName );
}

global proc pioEmAEoutpathReplace(string $cacheName)
{
	string $fileName = `getAttr $cacheName`;
	string	$buffer[];
	tokenize($cacheName, ".", $buffer);
	string	$nodeName = $buffer[0];

	// Filename Attribute
  connectControl diskNameField $cacheName;
  string $command = "pioEmAEassignCacheFileCB " + " " + $cacheName;
  button -e -c ("pioEmAEcacheFileBrowser \"" + $command + "\" " + $nodeName ) browser;
}



global proc string pioEmStripNodeName (string $nodeName) {
	string $buffer[];
	tokenize $nodeName "." $buffer;
	return $buffer[0];
}

global proc pioEmCustomAttrsManage (string $nodeName)
{
    $nodeName = pioEmStripNodeName ($nodeName);
    if (`columnLayout -q -exists "partioToParticleMapping"`)
    { deleteUI "partioToParticleMapping"; }

    columnLayout  partioToParticleMapping;

    string $multiList[] = `listAttr -multi ($nodeName+".partioCacheAttributes")`;
    for ($multi in $multiList)
    {
		rowLayout -nc 3 -cw3 200 100 200 -bgc .2 .2 .2  -ebg true -w 500;
		string $tok[];
		tokenize $multi "[" $tok;
		string $index = $tok[1];
		$index = substituteAllString($index, "]", "");
		string $attr = `getAttr ($nodeName+"."+$multi)`;
		textFieldGrp -w 200
       	 -label "partIO Attr"
       	 -text  $attr
       	-editable false -cw2 75 100 ;
		text -w 75 -fn "boldLabelFont" -l "---map to--->";
		string $mayaPPMapping = `textFieldGrp -w 175 -cw2 75 100   -label "ppAttr" -text "" -editable true`;
		connectControl -index 2  $mayaPPMapping  ($nodeName+".mayaPPAttributes["+$index+"]");
		setParent ..;
    }

}


global proc  pioEmLogoHeader(string $nodeName)
{
	if (!`symbolButton -q -exists  pioEmHeaderIcon`)
	{	rowLayout -nc 2 ;
		symbolButton -h 45 -w 200 -c "pioEmSwapAboutText()" -image "partioEmitter_logo.png" pioEmHeaderIcon;
		text -fn "smallBoldLabelFont" -l "Partio Emitter Tips: \n  turn on LifespanPP,  max Particles to -1\n and conserve to 0" pioEmAboutText;
	}
}


global proc  pioEmSwapAboutText()
{

	string $text1 =  "Partio Emitter Tips: \n  turn on LifespanPP,  max Particles to -1\n and conserve to 0";
	string $text2 =  "Partio Emitter by: \n John Cassella  (redpawfx)\n  with Luma-Pictures  2011";

	string $text = `text -q -l pioEmAboutText`;
	if (`gmatch $text "Partio Emitter Tips:*"`)
	{
		text -e -l $text2  pioEmAboutText;
	}
	else
	{
		text -e -l $text1 pioEmAboutText;
	}

}

global proc pioEmAddPPAttr(string $ppAttrName, string $attrType, string $partName)

{
	if ($ppAttrName != "")
	{
		if (`nodeType $partName` != "particle" && `nodeType $partName` != "nParticle")
		{
			string $shape[] = `listRelatives -s $partName`;
			$part = $shape[0];
		}
		if (`nodeType $partName` == "particle" ||  `nodeType $partName` == "nParticle")
		{
			if (!`attributeExists $ppAttrName $partName`)
			{
				addAttr -ln ($ppAttrName+"0") -dt $attrType $partName;
				addAttr -ln ($ppAttrName) -dt $attrType $partName;
				setAttr -e -keyable true ($partName+"."+$ppAttrName);
			}
		}
	}

}




